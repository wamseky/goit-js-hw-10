{"version":3,"file":"commonHelpers.js","sources":["../src/js/1-timer.js"],"sourcesContent":["import flatpickr from 'flatpickr';\nimport 'flatpickr/dist/flatpickr.min.css';\nimport iziToast from 'izitoast';\nimport 'izitoast/dist/css/iziToast.min.css';\nconst input = document.querySelector('#datetime-picker');\nconst startBtn = document.querySelector('[data-start]');\nstartBtn.disabled = true;\nlet userSelectedDate;\nconst convertMs = ms => {\n  const second = 1000;\n  const minute = second * 60;\n  const hour = minute * 60;\n  const day = hour * 24;\n  const days = Math.floor(ms / day);\n  const hours = Math.floor((ms % day) / hour);\n  const minutes = Math.floor(((ms % day) % hour) / minute);\n  const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n  return renderTimer(days, hours, minutes, seconds);\n};\nconst renderTimer = (days, hours, minutes, seconds) => {\n  const daysTarget = document.querySelector('[data-days]');\n  const hoursTarget = document.querySelector('[data-hours]');\n  const minutesTarget = document.querySelector('[data-minutes]');\n  const secondsTarget = document.querySelector('[data-seconds]');\n  daysTarget.textContent = days.toString().padStart(2, '0');\n  hoursTarget.textContent = hours.toString().padStart(2, '0');\n  minutesTarget.textContent = minutes.toString().padStart(2, '0');\n  secondsTarget.textContent = seconds.toString().padStart(2, '0');\n};\nconst errorMessage = () => {\n  iziToast.error({\n    class: 'popup-message',\n    theme: 'dark',\n    backgroundColor: '#ef4040',\n    messageColor: '#fff',\n    position: 'topRight',\n    pauseOnHover: true,\n    timeout: 3000,\n    message: 'Please choose a date in the future',\n  });\n};\nstartBtn.addEventListener('click', () => {\n  input.disabled = true;\n  startBtn.disabled = true;\n  const intervalID = setInterval(() => {\n    const currentTime = Date.now();\n    const diff = userSelectedDate - currentTime;\n    convertMs(diff);\n    if (diff <= 1000) {\n      clearInterval(intervalID);\n      input.disabled = false;\n    }\n  }, 1000);\n});\nconst options = {\n  enableTime: true,\n  time_24hr: true,\n  defaultDate: new Date(),\n  minuteIncrement: 1,\n  dateFormat: 'Y-m-d h:m',\n  onClose(selectedDates) {\n    if (selectedDates[0] < options.defaultDate) {\n      errorMessage();\n    } else {\n      userSelectedDate = selectedDates[0];\n      startBtn.disabled = false;\n    }\n  },\n};\nflatpickr(input, options);\n\n// import flatpickr from \"flatpickr\";\n// import \"flatpickr/dist/flatpickr.min.css\";\n// import iziToast from \"izitoast\";\n// import 'izitoast/dist/css/iziToast.min.css';\n\n// const stopTimer = (selectedDate, intervalID) => {\n//   if (selectedDate < Date.now() + 400) {\n//     clearInterval(intervalID);\n//     intervalID = null;\n//   }\n// }\n\n// const convertMs = (ms) => {\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   const days = Math.floor(ms / day);\n//   const hours = Math.floor((ms % day) / hour);\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n\n//   return initTimer(days, hours, minutes, seconds);\n// }\n\n// const initTimer = (days, hours, minutes, seconds) => {\n//   const daysTarget = document.querySelector('[data-days]');\n//   const hoursTarget = document.querySelector('[data-hours]');\n//   const minutesTarget = document.querySelector('[data-minutes]');\n//   const secondsTarget = document.querySelector('[data-seconds]');\n\n//   daysTarget.textContent = days.toString().padStart(2, '0');\n//   hoursTarget.textContent = hours.toString().padStart(2, '0');\n//   minutesTarget.textContent = minutes.toString().padStart(2, '0');\n//   secondsTarget.textContent = seconds.toString().padStart(2, '0');\n// }\n\n// const errorMessage = () => {\n//   iziToast.error({\n//     class: 'popup-message',\n//     theme: 'dark',\n//     backgroundColor: '#ef4040',\n//     messageColor: '#fff',\n//     position: 'topRight',\n//     pauseOnHover: true,\n//     timeout: 3000,\n//     message: 'Please choose a date in the future'\n//   });\n// }\n\n// const mobileInputAttrs = (state) => {\n//   const input = document.querySelector('.flatpickr-input.flatpickr-mobile');\n\n//   if (!input) {\n//     return;\n//   }\n\n//   state ? input.setAttribute('disabled', '') : input.removeAttribute('disabled');\n// }\n\n// const timerHandler = (selectedDate, input, trigger) => {\n//   trigger.removeAttribute('disabled');\n//   input.removeAttribute('disabled');\n//   mobileInputAttrs(false);\n//   let intervalID;\n\n//   trigger.addEventListener('click', () => {\n//     trigger.setAttribute('disabled', '');\n//     input.setAttribute('disabled', '');\n//     mobileInputAttrs(true);\n\n//     intervalID = setInterval(() => {\n//       convertMs(selectedDate - Date.now());\n//       stopTimer(selectedDate, intervalID);\n//     }, 200)\n//   });\n// }\n\n// const initInputTimer = () => {\n//   const input = document.querySelector('#datetime-picker');\n//   const trigger = document.querySelector('[data-start]');\n//   let userSelectedDate;\n\n//   if (!input || !trigger) {\n//     return;\n//   }\n\n//   trigger.setAttribute('disabled', '');\n\n//   const options = {\n//     enableTime: true,\n//     time_24hr: true,\n//     defaultDate: new Date(),\n//     minuteIncrement: 1,\n//     dateFormat: 'Y-m-d h:m',\n//     onClose(selectedDates) {\n//       userSelectedDate = selectedDates[0];\n//       if (userSelectedDate <= Date.now() || isNaN(userSelectedDate)) {\n//         trigger.setAttribute('disabled', '');\n//         errorMessage();\n//       } else {\n//         timerHandler(userSelectedDate, input, trigger);\n//       }\n//     }\n//   };\n\n//   flatpickr(input, options);\n// }\n\n// initInputTimer();\n"],"names":["input","startBtn","userSelectedDate","convertMs","ms","days","hours","minutes","seconds","renderTimer","daysTarget","hoursTarget","minutesTarget","secondsTarget","errorMessage","iziToast","intervalID","currentTime","diff","options","selectedDates","flatpickr"],"mappings":"sFAIA,MAAMA,EAAQ,SAAS,cAAc,kBAAkB,EACjDC,EAAW,SAAS,cAAc,cAAc,EACtDA,EAAS,SAAW,GACpB,IAAIC,EACJ,MAAMC,EAAYC,GAAM,CAKtB,MAAMC,EAAO,KAAK,MAAMD,EAAK,KAAG,EAC1BE,EAAQ,KAAK,MAAOF,EAAK,MAAO,IAAI,EACpCG,EAAU,KAAK,MAAQH,EAAK,MAAO,KAAQ,GAAM,EACjDI,EAAU,KAAK,MAASJ,EAAK,MAAO,KAAQ,IAAU,GAAM,EAClE,OAAOK,EAAYJ,EAAMC,EAAOC,EAASC,CAAO,CAClD,EACMC,EAAc,CAACJ,EAAMC,EAAOC,EAASC,IAAY,CACrD,MAAME,EAAa,SAAS,cAAc,aAAa,EACjDC,EAAc,SAAS,cAAc,cAAc,EACnDC,EAAgB,SAAS,cAAc,gBAAgB,EACvDC,EAAgB,SAAS,cAAc,gBAAgB,EAC7DH,EAAW,YAAcL,EAAK,SAAU,EAAC,SAAS,EAAG,GAAG,EACxDM,EAAY,YAAcL,EAAM,SAAU,EAAC,SAAS,EAAG,GAAG,EAC1DM,EAAc,YAAcL,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,EAC9DM,EAAc,YAAcL,EAAQ,SAAU,EAAC,SAAS,EAAG,GAAG,CAChE,EACMM,EAAe,IAAM,CACzBC,EAAS,MAAM,CACb,MAAO,gBACP,MAAO,OACP,gBAAiB,UACjB,aAAc,OACd,SAAU,WACV,aAAc,GACd,QAAS,IACT,QAAS,oCACb,CAAG,CACH,EACAd,EAAS,iBAAiB,QAAS,IAAM,CACvCD,EAAM,SAAW,GACjBC,EAAS,SAAW,GACpB,MAAMe,EAAa,YAAY,IAAM,CACnC,MAAMC,EAAc,KAAK,MACnBC,EAAOhB,EAAmBe,EAChCd,EAAUe,CAAI,EACVA,GAAQ,MACV,cAAcF,CAAU,EACxBhB,EAAM,SAAW,GAEpB,EAAE,GAAI,CACT,CAAC,EACD,MAAMmB,EAAU,CACd,WAAY,GACZ,UAAW,GACX,YAAa,IAAI,KACjB,gBAAiB,EACjB,WAAY,YACZ,QAAQC,EAAe,CACjBA,EAAc,CAAC,EAAID,EAAQ,YAC7BL,KAEAZ,EAAmBkB,EAAc,CAAC,EAClCnB,EAAS,SAAW,GAEvB,CACH,EACAoB,EAAUrB,EAAOmB,CAAO"}